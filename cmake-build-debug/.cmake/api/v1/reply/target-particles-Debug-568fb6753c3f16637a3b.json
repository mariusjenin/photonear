{
	"artifacts" : 
	[
		{
			"path" : "external/glfw/examples/particles"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"include_directories"
		],
		"files" : 
		[
			"external/glfw/examples/CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 28,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 11,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g   -Wall"
				}
			],
			"defines" : 
			[
				{
					"define" : "GLEW_STATIC"
				},
				{
					"define" : "TW_NO_DIRECT3D"
				},
				{
					"define" : "TW_NO_LIB_PRAGMA"
				},
				{
					"define" : "TW_STATIC"
				},
				{
					"define" : "_CRT_SECURE_NO_WARNINGS"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 2,
					"path" : "/home/mariusjenin/Documents/Master/GIT/photonear/external/glfw/include"
				},
				{
					"backtrace" : 2,
					"path" : "/home/mariusjenin/Documents/Master/GIT/photonear/external/glfw/deps"
				}
			],
			"language" : "C",
			"sourceIndexes" : 
			[
				0,
				2,
				4
			]
		}
	],
	"dependencies" : 
	[
		{
			"backtrace" : 1,
			"id" : "glfw::@ca12bac854c2ac6b2230"
		}
	],
	"folder" : 
	{
		"name" : "GLFW3/Examples"
	},
	"id" : "particles::@d64bfde005213c6f2aa9",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "-rdynamic",
				"role" : "flags"
			},
			{
				"backtrace" : 1,
				"fragment" : "external/glfw/src/libglfw3.a",
				"role" : "libraries"
			},
			{
				"fragment" : "-lrt",
				"role" : "libraries"
			},
			{
				"fragment" : "-lm",
				"role" : "libraries"
			},
			{
				"fragment" : "-lX11",
				"role" : "libraries"
			},
			{
				"backtrace" : 1,
				"fragment" : "-lpthread",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXrandr",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXinerama",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXi",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXxf86vm",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXcursor",
				"role" : "libraries"
			},
			{
				"fragment" : "-lGL",
				"role" : "libraries"
			},
			{
				"backtrace" : 1,
				"fragment" : "-ldl",
				"role" : "libraries"
			},
			{
				"backtrace" : 1,
				"fragment" : "-lpthread",
				"role" : "libraries"
			},
			{
				"fragment" : "-lrt",
				"role" : "libraries"
			},
			{
				"fragment" : "-lm",
				"role" : "libraries"
			},
			{
				"fragment" : "-lX11",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXrandr",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXinerama",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXi",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXxf86vm",
				"role" : "libraries"
			},
			{
				"fragment" : "-lXcursor",
				"role" : "libraries"
			},
			{
				"fragment" : "-lGL",
				"role" : "libraries"
			},
			{
				"backtrace" : 1,
				"fragment" : "-ldl",
				"role" : "libraries"
			}
		],
		"language" : "C"
	},
	"name" : "particles",
	"nameOnDisk" : "particles",
	"paths" : 
	{
		"build" : "external/glfw/examples",
		"source" : "external/glfw/examples"
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				2,
				4
			]
		},
		{
			"name" : "Header Files",
			"sourceIndexes" : 
			[
				1,
				3
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "external/glfw/examples/particles.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "external/glfw/deps/tinycthread.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "external/glfw/deps/tinycthread.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "external/glfw/deps/getopt.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "external/glfw/deps/getopt.c",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
